<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.cart.eco.open.mapper.DeliveryQMapper">
	
	<!-- 출고 요청1 -->
	
	<!-- 출고 요청 1 전제 조회 -->
	<select id="DeliveryQList" resultType="com.cart.eco.open.service.DeliveryQVO">
		select d.dlivy_date, d.dlivy_q_code, c.client_name "client_code", e.emp_name "emp_num", d.all_sum, d.dlivy_q_st
		from delivery_q d, client c, employees e
		where d.client_code = c.client_code
		and e.emp_num = d.emp_num
		order by dlivy_date
	
	</select>
	
	
	<!-- 출고 요청1 상세 조회 -->
	<select id="DeliveryQDList" resultType="Map"  parameterType="String">
		select 
			d.dlivy_qno "dlivyQno", 
			o.pro_code "proCode", 
			p.pro_name "proName", 
			d.dsell_num "dsellNum", 
			o.sell_price "sellPrice", 
			p.pro_num "proNum",
			q.order_code "orderCode"
		from delivery_q q, delivery_qd d, product p, product_option o
		where q.dlivy_q_code = d.dlivy_q_code
		and d.pro_code = p.pro_code
		and p.pro_code = o.pro_code
		and q.dlivy_q_code= #{dlivyCode}
		order by dlivy_qno
	
	</select>

	<!-- 출고 요청1 번호 가져오기 -->
	<select id="getDlivyQCode" resultType="com.cart.eco.open.service.DeliveryQVO" parameterType="String">
		select  concat('DLQ' , 
  					concat (to_char(sysdate,'YYmmdd'), 
        			concat ('-', nvl(max(to_number(substr(dlivy_q_code, 11))),0)+1 )
        			)) "dlivyQCode"
        	from delivery_Q
	</select>
	
	<!--  출고요청 등록하기 -->
	<insert id="insertDlivyQ" parameterType="com.cart.eco.open.service.DeliveryQVO">
		insert into delivery_q 
			(dlivy_q_code, order_code,dlivy_date, client_code, emp_num, dlivy_q_st)
			
		values ( #{dlivyQCode}, #{orderCode}, current_date , #{clientCode}, #{empNum}, '요청' ) 
	
	</insert>
	
	<!--  출고요청 상세 등록하기 -->
	<insert id="insertDlivyQD" parameterType="com.cart.eco.open.service.DeliveryQDVO">
		<selectKey keyProperty="dlivyQno" order="BEFORE" resultType="int" >
			select nvl(max(to_number(dlivy_Qno)),0)+1 from delivery_qd
		</selectKey>
	
		insert into delivery_qd 
			( dlivy_qno, dlivy_q_code, pro_code, dsell_num )
			
		values ( #{dlivyQno}, #{dlivyQCode}, #{proCode}, #{dsellNum} )
	
	</insert>
		

	<update id="updateOrderNum" parameterType="com.cart.eco.open.service.OrderDVO">
		update order_d
		set sold_num = sold_num + #{soldNum}
		where order_code = #{orderCode}
		and pro_code = #{proCode}

	</update>
	


	<!-- 주문서 상태 업데에이트하기 -->
	<update id="updateOrder" parameterType="com.cart.eco.open.service.OrdersVO">
		update orders set order_st = '완료' where order_code = #{orderCode}
	
	</update>
	
	
	<!-- 출고 등록2 -->
	
	<!-- 출고 등록2 전제 조회 -->
	<select id="DeliveryGList" resultType="com.cart.eco.open.service.DeliveryGVO">
		select 
			d.dlivy_date, 
			d.dlivy_g_code, 
			c.client_name "client_code", 
			e.emp_name "emp_num", 
			d.dlivy_g_st "dlivyGSt"
		
		from delivery_g d, client c, employees e
		where d.client_code = c.client_code
		and e.emp_num = d.emp_num
		order by dlivy_date
	
	</select>
	
	
	<!-- 출고 등록2 상세 조회 -->
	<select id="DeliveryGDList" resultType="Map"  parameterType="String">
		select 
			d.dlivy_gno "dlivyGno", 
			o.pro_code "proCode", 
			p.pro_name "proName", 
			d.dsell_num "dsellNum", 
			p.pro_num "proNum"

		from delivery_g g, delivery_gd d, product p, product_option o
		where g.dlivy_g_code = d.dlivy_g_code
		and d.pro_code = p.pro_code
		and p.pro_code = o.pro_code
		and g.dlivy_g_code= #{dlivyCode}
		order by dlivy_gno
	
	</select>
	
	
	<!-- 모달창 출고 요청 조회 -->
	<select id="MdeliveryQList" resultType="com.cart.eco.open.service.DeliveryQVO">
		select q.dlivy_q_code, q.order_code, q.client_code, c.client_name, q.dlivy_date
        from delivery_q q, client c
        where q.client_code = c.client_code
        and dlivy_q_st = '요청'	
        order by dlivy_q_code
        
	</select>
	
	<!-- 모달창 출고 요청 상세 조회 -->
	<select id="MdeliveryQListD" resultType="Map"  parameterType="String">
		select 
			d.dlivy_qno "dlivyQno", 
			o.pro_code "proCode", 
			p.pro_name "proName", 
			d.dsell_num "dsellNum", 
			p.pro_num "proNum"
			
		
		from delivery_q q, delivery_qd d, product p, product_option o
		where q.dlivy_q_code = d.dlivy_q_code
		and d.pro_code = p.pro_code
		and p.pro_code = o.pro_code
		and q.dlivy_q_code= #{dlivyCode}
		order by dlivy_qno
	
	</select>
	
	<!-- 출고 등록2 번호 가져오기 -->
	<select id="getDlivyGCode" resultType="com.cart.eco.open.service.DeliveryGVO" parameterType="String">
		select  concat('DLG' , 
  					concat (to_char(sysdate,'YYmmdd'), 
        			concat ('-', nvl(max(to_number(substr(dlivy_g_code, 11))),0)+1 )
        			)) "dlivyGCode"
        	from delivery_G
	</select>
	
	<!--  출고등록 등록하기 -->
	<insert id="insertDlivyG" parameterType="com.cart.eco.open.service.DeliveryGVO">
		insert into 
			delivery_g (dlivy_g_code, order_code,dlivy_date, client_code, emp_num,dlivy_g_st)
		values ( #{dlivyGCode}, #{orderCode}, current_date , #{clientCode}, #{empNum}, '등록' )  
	
	</insert>
	
	<!--  출고등록 상세 등록하기 -->
	<insert id="insertDlivyGD" parameterType="com.cart.eco.open.service.DeliveryQVO">
		<selectKey keyProperty="dlivyGno" order="BEFORE" resultType="int" >
			select nvl(max(to_number(dlivy_gno)),0)+1 from delivery_gd
		</selectKey>
	
		insert into delivery_gd 
			(dlivy_gno, dlivy_g_code, pro_code, dsell_num)
		values ( #{dlivyGno}, #{dlivyGCode}, #{proCode}, #{dsellNum}	)
	
	</insert>
	
	<!-- 출고요청 상태 업데이트 하기 -->
	<update id="updateQst" parameterType="com.cart.eco.open.service.DeliveryQVO">
		update delivery_q 
			set dlivy_q_st = '등록'
			where dlivy_q_code = #{dlivyQCode}
	</update>
	
	
	<update id="updateProduct" parameterType="com.cart.eco.common.service.ProductVO">
		update product set pro_num =
				(select pro_num - #{dsellNum}
	        		from product
	        		where pro_code = #{proCode})
    	where pro_code = #{proCode}
	</update>
	
	
	<!-- 출고 처리3 -->
	
	<!-- 출고 처리 전제 조회 -->
	<select id="DeliveryPList" resultType="com.cart.eco.open.service.DeliveryProVO">
		select d.dlivy_date, d.dlivy_pro_code, c.client_name "client_code", e.emp_name "emp_num",  TO_CHAR(d.all_sum,'999,999') || '원' "fall_sum"
		from delivery_pro d, client c, employees e
		where d.client_code = c.client_code
		and e.emp_num = d.emp_num
	
	</select>
	
	
	<!-- 모달창 출고등록 조회 -->
	<select id="MdeliveryGList" resultType="com.cart.eco.open.service.DeliveryGVO">
		select d.dlivy_date, 
				d.dlivy_g_code, 
				c.client_name "client_code", 
				e.emp_name "emp_num", 
		from delivery_g d, client c, employees e
		where d.client_code = c.client_code
		and e.emp_num = d.emp_num
		and d.dlivy_g_code= #{dlivyCode}
		
	
	</select>
	
	<!-- 모달창 출고등록 상세 조회 -->
	<select id="MdeliveryGListD" resultType="Map"  parameterType="String">
		select 
			d.dlivy_gno "dlivyQno", 
			p.pro_code "proCode", 
			p.pro_num "proNum", 
			p.pro_name "proName", 
		from delivery_g g, delivery_gd d, product p, product_option o
		where g.dlivy_g_code = d.dlivy_g_code
		and d.pro_code = p.pro_code
		and p.pro_code = o.pro_code
		and g.dlivy_g_code= #{dlivyCode}
		order by dlivy_gno

	
	</select>
	
	
	
	
	
	
	
	
	<!-- 배송 정보 조회 -->
	
	
	<!-- 모달창 출고 등록2 전제 조회 (등록만)  -->
	<select id="deliveryGst" resultType="com.cart.eco.open.service.DeliveryGVO">
		select 
			d.dlivy_date, 
			d.dlivy_g_code, 
			d.order_code,
			c.client_name "clientName",
			d.client_code "clientCode" ,
			e.emp_name "emp_num", 
			d.dlivy_g_st "dlivyGSt"
		
		from delivery_g d, client c, employees e
		where d.client_code = c.client_code
		and e.emp_num = d.emp_num
		and dlivy_g_st = '등록' 
		order by dlivy_g_code
		
	</select>
	
	
	
	
	<!-- 배송 정보 전체 조회 -->
	<select id="DeliveryInfoList" resultType="com.cart.eco.open.service.DeliveryProVO">
		
		select d.dlivy_pro_code, d.dlivy_date, c.client_name "clientName", d.dlivy_mth, d.dlivy_code, d.dlivy_name, d.dlivy_pnum
		from delivery_pro d, client c
		where d.client_code = c.client_code
		order by dlivy_date
	
	</select>
	
	
	
	<!-- 배송정보 등록 -->
	<insert id="updateInfo" parameterType="com.cart.eco.open.service.DeliveryProVO">
		<selectKey keyProperty="dlivyProCode" order="BEFORE" resultType="String">
			select  concat('DLP' , 
	  					concat (to_char(sysdate,'YYmmdd'), 
	        			concat ('-', nvl(max(to_number(substr(dlivy_pro_code, 11))),0)+1 )
	        			)) "dlivyProCode"
	        	from delivery_Pro
		</selectKey>
		
		insert into
			delivery_pro ( dlivy_pro_code, dlivy_date, order_code, client_code, emp_num, dlivy_mth, dlivy_code, dlivy_name, dlivy_pnum)
			values ( #{dlivyProCode}, sysdate, #{orderCode}, #{clientCode}, '2020110205',#{dlivyMth}, #{dlivyCode}, #{dlivyName}, #{dlivyPnum} )
		
		
	</insert>
	
	<!-- 베송등록 할때 출고등록 상태 업데이트 하기  등록 -> 배송 -->
	<update id="updateGst" parameterType="com.cart.eco.open.service.DeliveryGVO">
		update delivery_g set dlivy_g_st = '배송'
		where dlivy_g_code = #{dlivyGCode}
	</update>
	
	
	
	
	<!-- 제품재고/bom수급현황 -->
	
	<!-- 물품 재고 -->
	<select id="productList" resultType="com.cart.eco.common.service.ProductVO">
		select pro_code, pro_name, pro_num, wh_code, pro_group
		from product
	</select>


	<!-- 완제품재고 -->
	<select id="productList2" resultType="com.cart.eco.common.service.ProductVO">
		select pro_code, pro_name, pro_num, wh_code
		from product
		where pro_group like 'CP%' 
	</select>
	
	







	<!-- 셀렉트 옵션 -->
	
	<select id="selectProCode" resultType="com.cart.eco.common.service.ProductVO">
   		select * from product
   </select>
   
   
 	<select id="selectClientName" resultType="com.cart.eco.common.service.ClientVO">
   		select client_name, client_code from client
   </select>
	
	<select id="selectEmp" resultType="com.cart.eco.common.service.EmpVO">
		select * from employees
	</select>
	
 	<select id="selectDeliveryQ" resultType="com.cart.eco.open.service.DeliveryQVO">
 		select * from delivery_q
	</select>
	
	<select id="selectDeliveryG" resultType="com.cart.eco.open.service.DeliveryGVO">
 		select * from delivery_g
	</select>
	
	<select id="selectDeliveryP" resultType="com.cart.eco.open.service.DeliveryProVO">
 		select * from delivery_pro
	</select>

	<select id="selectBom" resultType="com.cart.eco.common.service.BomVO">
 		select * from bom
	</select>
	
	<select id="selectOrderCode" resultType="com.cart.eco.open.service.OrdersVO">
 		select * from orders
	</select>
	
	
	<select id="forChart" resultType="com.cart.eco.open.service.DeliveryGDVO">
		select d.pro_code, c.pro_name,substr(to_char(dlivy_g_code),6,2) "dsellNum"
		from delivery_Gd  d join product c
	    on d.pro_code=c.pro_code
	    where d.pro_code like '%ELSP%'	
	</select>
	
	
	
	
	
	
	
	
	
	

</mapper>