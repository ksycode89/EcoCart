<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.cart.eco.open.mapper.OrdersMapper">

	<!--//주문서 조회  -->
	<select id="OrdersList" resultType="com.cart.eco.open.service.OrdersVO">
		select o.order_code, c.client_name, c.client_code, o.order_date, o.de_date, o.all_sum, order_st
		from orders o, client c
		where o.client_code = c.client_code
		order by order_code
		
	</select>
	
	<!--//주문서 조회 진행중인 -->
	<select id="OrdersListOk" resultType="com.cart.eco.open.service.OrdersVO">
		select o.order_code, c.client_name, c.client_code, o.order_date, o.de_date, o.all_sum, order_st
		from orders o, client c
		where o.client_code = c.client_code
		and order_st ='진행'
		order by order_code
		
	</select>


	<!-- //주문서 상세 조회 -->
	<select id="OrdersDList" resultType="Map" parameterType="String">
		select d.order_dno "orderDno", 
			   o.pro_code "proCode", 
			   p.pro_name "proName", 
			   d.sell_num "sellNum", 
			   o.sell_price "sellPrice",
			    d.sold_num "soldNum",
				(d.sell_num *o.sell_price) as "sumPrice",
				d.can_num "canNum",
				o.order_code "orderCode",
				( d.sell_num -  d.sold_num  ) "doDlivyNum"
		from orders o, order_d d, product p, product_option o
		where o.order_code = d.order_code
		and d.pro_code = p.pro_code
		and p.pro_code = o.pro_code
		and o.order_code = #{orderCode}
		order by order_dno

	</select>


	<!--//제품코드 조회  -->
	<select id="proList" resultType="com.cart.eco.common.service.ProductVO">
		select pro_code, pro_name, pro_num, wh_code
		from product
	
	</select>
	
	<!--//주문 마감 조회  -->
	<select id="OrdersCanList" resultType="com.cart.eco.open.service.OrdersVO">
		select o.order_code, c.client_name "client_code", o.order_date, o.de_date, o.all_sum, order_st
		from orders o, client c
		where o.client_code = c.client_code
		and order_st = '마감' 
		or order_st = '승인'
	
	</select>
	
	
	<!-- 주문 마감 상세 조회 -->
	<select id="OrdersCanDList" resultType="Map" parameterType="String">
		select d.order_dno "oderDno", 
			o.pro_code "proCode",
			 p.pro_name "proName", 
			 d.sold_num "soldNum", 
			 d.sell_num "sellNum", 
			 d.can_num "canNum"
			 o.order_code "orderCode"
		from orders o, order_d d, product p, product_option o
		where o.order_code = d.order_code
		and d.pro_code = p.pro_code
		and p.pro_code = o.pro_code
		and o.order_code = #{orderCode }
		order by order_dno	
	
	</select>
	
	<!--  승인된 견적서 목록 가져오기 -->
	<select id="selectEstmtCode" resultType="com.cart.eco.open.service.EstimateVO">
		select * from estimate
		where estmt_st = '대기'
	
	</select>
	
	<!-- 모달창 승인 견적서 조회 -->
	<select id="MestmtList" resultType="com.cart.eco.open.service.EstimateVO" parameterType="String">
		select e.estmt_code, c.client_name ,e.client_code, e.estmt_date, e.de_date, all_sum, e.estmt_st
		from estimate e, client c
		where e.client_code = c.client_code
		and e.estmt_code = #{estmtCode}
		
	</select>
	
	
	<!-- 모달창 승인 견적서 상세 조회 -->
	<select id="MestmtListD" resultType="Map" parameterType="String">
		select  d.pro_code  "proCode", 
		        p.pro_name "proName",
		        d.sell_num "sellNum", 
		        o.sell_price "sellPrice",	 
		        (d.sell_num * o.sell_price)  "sumPrice"
		from estimate e, estimate_D d, product p, product_option o
		where e.estmt_code = d.estmt_code 
		and d.pro_code = p.pro_code
		and p.pro_code = o.pro_code
		and e.estmt_code = #{estmtCode}
		order by estmt_dno
	</select>
	
	
	<!-- 주문서 번호 가져오기 -->
	<select id="getOrderCode" resultType="com.cart.eco.open.service.OrdersVO" parameterType="String">
		select  concat('ord' , 
  					concat (to_char(sysdate,'YYmmdd'), 
        			concat ('-', nvl(max(to_number(substr(order_code, 11))),0)+1 )
        			)) "orderCode"
        	from orders
	</select>
	
	
	
	<!-- 주문서 등록 -->
	<insert id="insertOrder" parameterType="com.cart.eco.open.service.OrdersVO" >
		insert into orders (order_code, client_code, order_date, de_date, order_st,all_sum)
			values( #{orderCode}, #{clientCode}, sysdate, #{deDate}, '진행',#{allSum} )
		
	</insert>
	
	
	<!-- 주문 상세 등록 -->
	<insert id="insertOrderD" parameterType="com.cart.eco.open.service.OrderDVO">
		<selectKey keyProperty="orderDno" order="BEFORE" resultType="int">
			select nvl(max(to_number(order_dno)),0)+1 from order_d
		</selectKey>
		
		insert into order_d (order_dno, order_code, pro_code, sell_num, sum_price,sold_num)
			values ( #{orderDno}, #{orderCode}, #{proCode}, #{sellNum}, #{sumPrice},'0' )
		
	</insert>
	
	<!-- 주문 등록시 견적서 상태 변경 -->
	<update id="updateEstmtSt" parameterType="com.cart.eco.open.service.EstimateVO">
		update estimate set estmt_st = '승인' where estmt_code = #{estmtCode}
	
	</update>
	
	
	<!-- 주문 상태 변경 -->
	<update id="updateOrderSt" parameterType="com.cart.eco.open.service.OrdersVO">
		update orders set order_st = '승인' where order_code = #{orderCode}
	
	</update>
	
	<!-- 주문 마감 상태 변경 -->
	<update id="updateOrderCanSt" parameterType="com.cart.eco.open.service.OrdersVO">
		update orders set order_st = '마감' where order_code = #{orderCode}
	
	</update>
	
	<!-- 주문 마감 취소 수량 변경 -->
	<update id="updateCanNum" parameterType="com.cart.eco.open.service.OrderDVO"> 
		update order_d set can_num =
            (select sell_num - sold_num
            from order_d
            where order_dno = #{orderDno} )
    
        where order_dno = #{orderDno}
	</update>
	
</mapper>